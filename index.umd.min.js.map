{"version":3,"sources":["webpack://index/webpack/universalModuleDefinition","webpack://index/webpack/bootstrap","webpack://index/./node_modules/@soda/get-current-script/index.js","webpack://index/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://index/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://index/./packages/utils/props.ts","webpack://index/./packages/utils/validate.ts","webpack://index/./packages/utils/with-install.ts","webpack://index/./packages/utils/format.ts","webpack://index/./packages/utils/constant.tsx","webpack://index/./packages/hooks/useMenus.tsx","webpack://index/./packages/hooks/use-expose.ts","webpack://index/./packages/free/Free.tsx","webpack://index/./packages/free/index.ts","webpack://index/./packages/avatar/Avatar.tsx","webpack://index/./packages/avatar/index.ts","webpack://index/./packages/button/Button.tsx","webpack://index/./packages/button/index.ts","webpack://index/./packages/contact/Contact.tsx","webpack://index/./packages/contact/index.ts","webpack://index/./packages/badge/Badge.tsx","webpack://index/./packages/badge/index.ts","webpack://index/./packages/dialog/Dialog.tsx","webpack://index/./packages/dialog/index.ts","webpack://index/./packages/messages/Messages.tsx","webpack://index/./packages/messages/Image.tsx","webpack://index/./packages/messages/File.tsx","webpack://index/./packages/messages/Text.tsx","webpack://index/./packages/messages/Event.tsx","webpack://index/./packages/messages/Template.tsx","webpack://index/./packages/messages/index.ts","webpack://index/./packages/editor/Editor.tsx","webpack://index/./packages/editor/index.ts","webpack://index/./packages/index.ts","webpack://index/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__8bbf__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getCurrentScript","descriptor","getOwnPropertyDescriptor","document","currentScript","Error","err","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","exec","stack","scriptLocation","line","currentLocation","location","href","replace","hash","scripts","getElementsByTagName","documentElement","outerHTML","RegExp","trim","length","readyState","src","innerHTML","window","match","numericProp","Number","String","makeNumericProp","defaultVal","type","default","makeNumberProp","makeStringProp","makeBooleanProp","Boolean","makeObjectProp","required","makeArrayProp","Array","isArray","isString","val","isFunction","extend","assign","camelize","str","_","toUpperCase","withInstall","options","install","app","component","formatDay","time","date","Date","year","getFullYear","month","getMonth","day","getDate","guid","Math","random","v","toString","formatByte","unitArr","index","floor","log","size","pow","parseFloat","toFixed","formatTime","f","nDate","getMD","getDay","dateYear","nDateYear","formatDate","arr","addZero","getHours","getMinutes","getSeconds","fs","charAt","defaultMenus","title","unread","click","bottom","render","defaultMenusIndex","messages","contacts","useMenus","customMenus","undefined","menus","ref","map","menu","keys","includes","useExpose","apis","instance","getCurrentInstance","proxy","freeProps","width","height","shape","showMenu","userInfo","messageName","menuAvatar","defineComponent","props","provide","freeIM","setup","slots","emit","wrapper_style","activeMenu","groups","curContact","currentContactId","messagesBucket","reactive","Map","messageLoadedBucket","loadingBucket","lockBucket","msgRef","currentContact","computed","find","contact","id","getCurrentMessages","lastMessages","data","filter","lastMessage","sort","c1","c2","lastMessageTime","allUnread","forEach","renderMenuItem","top","changeMenuClick","changeMenu","node","push","renderMenu","avatar","renderSidebar","renderMessages","renderContacts","initContacts","_contacts","group","sortContacts","menuName","changeContact","contactId","has","set","pullMessages","scrollToBottom","updateUnread","activeClass","findContactById","isEnd","len","end","addMessage","delete","curCid","class","curIndex","contactNode","a","b","localeCompare","currentLoadend","currentLoading","lastMessageRender","message","content","handleSend","console","createMessage","appendMessage","_emitSend","updateContact","lastMessageStatus","status","next","file","updateMessage","toContactId","findIndex","item","findMessage","indexOf","parseInt","updateContactData","getTime","from","handleUpload","image","imageTypes","URL","createObjectURL","fileSize","fileName","renderContent","detailNode","nickname","FreeIM","_FreeIM","avatarProps","inject","substr","Avatar","buttonProps","cls","Button","contactProps","isMessage","base","emits","onClick","FreeContact","_Contact","badgeProps","FreeBadge","_Badge","DialogProps","header","footer","okText","cancelText","mask","maskClosable","show","updateShow","maskUpdateShow","ok","e","FreeDialog","_Dialog","messagesProps","loading","timeRange","onScroll","event","target","scrollTop","nextTick","scrollHeight","loadStatus","intervalTime","prev","attrs","reverse","eventProps","templateProps","_emit","$emit","handleError","handleClickContent","handleClickAvatar","FreeMessages","_Messages","FreeMessageImage","_MessageImage","FreeMessageFile","_MessageFile","FreeMessageText","_MessageText","FreeMessageEvent","_MessageEvent","FreeMessageTemplate","_MessageTemplate","command","execCommand","editorProps","textarea","onKeydown","code","ctrlKey","shiftKey","preventDefault","clear","fileRef","fileList","changeFile","files","resetInput","handleClickFile","emojiClick","cancel","FreeEditor","_Editor","components","FreeAvatar","FreeButton"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,kBAAZC,SAA0C,kBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,QACR,oBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIJ,GACe,kBAAZC,QACdA,QAAQ,SAAWD,EAAQG,QAAQ,QAEnCJ,EAAK,SAAWC,EAAQD,EAAK,SAR/B,CASoB,qBAATO,KAAuBA,KAAOC,MAAO,SAASC,GACzD,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUV,QAGnC,IAAIC,EAASO,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHZ,QAAS,IAUV,OANAa,EAAQH,GAAUI,KAAKb,EAAOD,QAASC,EAAQA,EAAOD,QAASS,GAG/DR,EAAOW,GAAI,EAGJX,EAAOD,QA0Df,OArDAS,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASjB,EAASkB,EAAMC,GAC3CV,EAAoBW,EAAEpB,EAASkB,IAClCG,OAAOC,eAAetB,EAASkB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASzB,GACX,qBAAX0B,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAetB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAetB,EAAS,aAAc,CAAE4B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASnC,GAChC,IAAIkB,EAASlB,GAAUA,EAAO8B,WAC7B,WAAwB,OAAO9B,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAQ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,Q,sMClFrD,WAMC,SAAU5C,EAAMC,GAEb,EAAO,GAAI,EAAF,EAAS,kEAFtB,CAQkB,qBAATM,MAAuBA,MAAa,WAC3C,SAASsC,IACP,IAAIC,EAAavB,OAAOwB,yBAAyBC,SAAU,iBAE3D,IAAKF,GAAc,kBAAmBE,UAAYA,SAASC,cACzD,OAAOD,SAASC,cAIlB,GAAIH,GAAcA,EAAWpB,MAAQmB,GAAoBG,SAASC,cAChE,OAAOD,SAASC,cAKlB,IACE,MAAM,IAAIC,MAEZ,MAAOC,GAEL,IAMEC,EACAC,EACAC,EAREC,EAAgB,kCAClBC,EAAgB,6BAChBC,EAAeF,EAAcG,KAAKP,EAAIQ,QAAUH,EAAcE,KAAKP,EAAIQ,OACvEC,EAAkBH,GAAgBA,EAAa,KAAO,EACtDI,EAAQJ,GAAgBA,EAAa,KAAO,EAC5CK,EAAkBd,SAASe,SAASC,KAAKC,QAAQjB,SAASe,SAASG,KAAM,IAIzEC,EAAUnB,SAASoB,qBAAqB,UAEtCR,IAAmBE,IACrBV,EAAaJ,SAASqB,gBAAgBC,UACtCjB,EAA2B,IAAIkB,OAAO,sBAAwBV,EAAO,GAAK,iDAAkD,KAC5HP,EAAqBF,EAAWa,QAAQZ,EAA0B,MAAMmB,QAG1E,IAAK,IAAI3D,EAAI,EAAGA,EAAIsD,EAAQM,OAAQ5D,IAAK,CAEvC,GAA8B,gBAA1BsD,EAAQtD,GAAG6D,WACb,OAAOP,EAAQtD,GAIjB,GAAIsD,EAAQtD,GAAG8D,MAAQf,EACrB,OAAOO,EAAQtD,GAIjB,GACE+C,IAAmBE,GACnBK,EAAQtD,GAAG+D,WACXT,EAAQtD,GAAG+D,UAAUJ,SAAWlB,EAEhC,OAAOa,EAAQtD,GAKnB,OAAO,MAIX,OAAOgC,M,qBC7ET1C,EAAOD,QAAUO,G,2GCEjB,G,kjBAAsB,qBAAXoE,OAAwB,CACjC,IAAI5B,EAAgB4B,OAAO7B,SAASC,cAE9BJ,EAAmB,EAAQ,QAC/BI,EAAgBJ,IAGV,kBAAmBG,UACvBzB,OAAOC,eAAewB,SAAU,gBAAiB,CAAEtB,IAAKmB,IAI5D,IAAI8B,EAAM1B,GAAiBA,EAAc0B,IAAIG,MAAM,2BAC/CH,IACF,IAA0BA,EAAI,IAKnB,ICnBFI,EAAc,CAACC,OAAQC,QAEvBC,EAAkB,SAAIC,GAAJ,MAAuB,CAClDC,KAAML,EACNM,QAASF,IAGAG,EAAiB,SAAIH,GAAJ,MAAuB,CACjDC,KAAM,CAACJ,QACPK,QAASF,IAGAI,EAAiB,SAAIJ,GAAJ,MAAuB,CACjDC,KAAM,CAACH,QACPI,QAASF,IAGAK,EAAkB,SAAIL,GAAJ,MAAuB,CAClDC,KAAM,CAACK,SACPJ,QAASF,IAGAO,EAAiB,iBAAoB,CAC9CN,KAAM7D,OACNoE,UAAU,IAGDC,EAAgB,iBAAoB,CAC7CR,KAAMS,MACNR,QAAS,iBAAM,MC/BNS,EAAUD,MAAMC,QAChBC,EAAW,SAACC,GAAD,MAAiC,kBAARA,GACpCC,EAAa,SAACD,GAAD,MAAkD,oBAARA,GACvDE,EAAS3E,OAAO4E,OAChBC,EAAW,SAACC,GAAD,OACtBA,EAAIpC,QAAQ,UAAU,SAACqC,EAAGpF,GAAJ,OAAUA,EAAEqF,kBCY9B,SAAUC,EAAeC,GAQ3B,OAPCA,EAAoCC,QAAU,SAACC,GAE5C,IAAQvF,EAASqF,EAATrF,KACRuF,EAAIC,UAAUxF,EAAMqF,GACpBE,EAAIC,UAAUR,EAAS,IAAD,OAAKhF,IAASqF,IAGjCA,ECzBJ,IAAMI,EAAY,SAACC,GACtB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WACbC,EAAMN,EAAKO,UACjB,OAAOL,EAAO,IAAME,EAAQ,IAAME,GAGzBE,EAAO,WAChB,MAAO,uCAAuCtD,QAAQ,SAAS,SAAU/C,GACrE,IAAIS,EAAoB,GAAhB6F,KAAKC,SAAgB,EACzBC,EAAS,KAALxG,EAAWS,EAAS,EAAJA,EAAU,EAClC,OAAO+F,EAAEC,SAAS,QAIpB,SAAUC,EAAW9F,GACvB,IAAKA,EACH,MAAO,UAET,IAAM+F,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrDC,EAAQ,EACZA,EAAQN,KAAKO,MAAMP,KAAKQ,IAAIlG,GAAS0F,KAAKQ,IAAI,OAC9C,IAAIC,EAAOnG,EAAQ0F,KAAKU,IAAI,KAAMJ,GAElC,OADAG,EAAOE,WAAWF,EAAKG,QAAQ,IACxBH,EAAOJ,EAAQC,GAGpB,SAAUO,EAAWvG,GACvB,IASIwG,EATEvB,EAAO,IAAIC,KAAKlF,GAChByG,EAAQ,IAAIvB,KAEZE,EAAc,SAACnF,GAAD,OAAaA,EAAEmF,eAC7BsB,EAAQ,SAACzG,GAAD,gBAAgBA,EAAEqF,WAAa,EAA/B,YAAoCrF,EAAE0G,WAE9CC,EAAWxB,EAAYH,GACvB4B,EAAYzB,EAAYqB,GAU9B,OANID,EADAI,IAAaC,EACT,aACG,UAAGD,EAAH,YAAeF,EAAMzB,MAArB,UAAoC4B,EAApC,YAAiDH,EAAMD,IAC1D,MAEA,WAEDK,EAAW9G,EAAOwG,GAGvB,SAAUM,EAAW7G,EAAkBuG,GACpCA,IAAGA,EAAI,eAERvG,EADAA,EACI,IAAIiF,KAAKjF,GAET,IAAIiF,KAaZ,IAVA,IAAM6B,EAAM,CACR9G,EAAEmF,cAAcS,WAChBmB,EAAQ/G,EAAEqF,WAAa,GACvB0B,EAAQ/G,EAAEuF,WACVwB,EAAQ/G,EAAEgH,YACVD,EAAQ/G,EAAEiH,cACVF,EAAQ/G,EAAEkH,eAERC,EAAK,SAEFrI,EAAI,EAAGA,EAAIgI,EAAIpE,OAAQ5D,IAC5ByH,EAAKA,EAAErE,QAAQiF,EAAGC,OAAOtI,GAAIgI,EAAIhI,IAErC,OAAOyH,EAGL,SAAUQ,EAAQpB,GACpB,OAAOA,EAAI,GAAJ,WAAaA,GAAMA,EAAEC,W,gBC1EnByB,EAAe,CACxB,CACIhH,IAAK,WACLiH,MAAO,KACPC,OAAQ,EACRC,MAAO,KACPC,QAAQ,EACRC,OAAQ,sDAAe,sBAAf,QAEZ,CACIrH,IAAK,WACLiH,MAAO,MACPC,OAAQ,EACRC,MAAO,KACPC,QAAQ,EACRC,OAAQ,sDAAe,sBAAf,QAEZ,CACIrH,IAAK,WACLiH,MAAO,MACPC,OAAQ,EACRC,MAAO,KACPC,QAAQ,EACRC,OAAQ,sDAAe,kBAAf,SCnBVC,EAEF,CACAC,SAAU,EACVC,SAAU,GAKd,SAASC,IAAsD,IAA7CC,EAA6C,4DAATC,EAC9CC,EAAQC,iBAAgB,IAY5B,OAXIpE,MAAMC,QAAQgE,GACdE,EAAMlI,MAAQgI,EAAYI,KAAI,SAAAC,GAC1B,OAAI5I,OAAO6I,KAAKV,GAAmBW,SAASF,EAAK/H,KACtCgH,EAAaM,EAAkBS,EAAK/H,MAExC+H,KAGXH,EAAMlI,MAAQsH,EAGXY,ECvBL,SAAUM,EAAmCC,GAC/C,IAAMC,EAAWC,kCACbD,GACAtE,EAAOsE,EAASE,MAAOH,G,2gRCa/B,IAAMI,EAAY,CACdC,MAAO1F,EAAgB,KACvB2F,OAAQ3F,EAAgB,KACxB4F,MAAOvF,EAAoC,UAC3CwF,SAAUvF,GAAgB,GAC1BwF,SAAUtF,IACVuF,YAAazF,GAAgB,GAC7B0F,WAAY1F,GAAgB,IAKjB2F,+BAAgB,CAC3B/J,KAAM,UACNgK,MAAOT,EACPU,QAH2B,WAIvB,MAAO,CACHL,SAAUxK,KAAKwK,SACfM,OAAQ9K,OAGhB+K,MAT2B,SASrBH,EATqB,GASC,IAAbI,EAAa,EAAbA,MAAOC,EAAM,EAANA,KACVb,EAAkBQ,EAAlBR,MAAOC,EAAWO,EAAXP,OACTa,EAAgB,CAClBd,MAAOA,EAAQ,KACfC,OAAQA,EAAS,MAEfc,EAAa1B,iBAAI,YACjBL,EAAWK,iBAAe,IAC1B2B,EAAS3B,iBAAe,IACxB4B,EAAa5B,mBACb6B,EAAmB7B,mBACnB8B,EAAiBC,sBAAS,IAAIC,KAC9BC,EAAsBF,sBAAS,IAAIC,KACnCE,EAAgBH,sBAAS,IAAIC,KAC7BG,EAAaJ,sBAAS,IAAIC,KAC1BjC,EAAQH,IACRwC,EAASpC,iBAA4B,MAErCqC,EAAiBC,uBAAS,WAC5B,OAAO3C,EAAS9H,MAAM0K,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOZ,EAAiBhK,YAGpE6K,EAAqBJ,uBAAS,WAChC,OAAKT,EAAiBhK,OACfiK,EAAerK,IAAIoK,EAAiBhK,QADP,MAIlC8K,EAAeL,uBAAS,WAC1B,IAAMM,EAAOjD,EAAS9H,MAAMgL,QAAO,SAAAL,GAAO,OAAIA,EAAQM,eAItD,OAHAF,EAAKG,MAAK,SAACC,EAAIC,GACX,OAAQA,EAAGC,gBAAkBD,EAAGC,gBAAkB,IAAMF,EAAGE,gBAAkBF,EAAGE,gBAAkB,MAE/FN,KAGLO,EAAYb,uBAAS,WACvB,IAAIjD,EAAU,EAId,OAHAsD,EAAa9K,MAAMuL,SAAQ,SAAAZ,GACvBnD,GAAUmD,EAAQnD,UAEfA,KAGX,SAASgE,IACL,IAAMC,EAAmC,GACnC/D,EAAsC,GAgB5C,SAASgE,EAAgBrD,GACjBA,EAAKX,QACTiE,EAAWtD,EAAK/H,KAGpB,OApBA4H,EAAMlI,MAAMuL,SAAQ,SAAAlD,GAAO,MACjBuD,EAAO,gCAAH,+BAAiC/B,EAAW7J,QAAUqI,EAAK/H,IAAM,mBAAqB,IAAtF,MAAmG+H,EAAKd,MAAxG,QAAwH,WAC9HpD,EAAWkE,EAAKZ,OAASY,EAAKZ,MAAQiE,EAAgBrD,KADhD,CAIW,aAAbA,EAAK/H,IAAL,6EACqBgL,EAAUtL,OAD/B,IAEKqI,EAAKV,UAFV,mCAGgBU,EAAKV,WAI5BU,EAAKX,OAA0BA,EAAOmE,KAAKD,GAA7BH,EAAII,KAAKD,MAQrB,CACHH,MACA/D,UAIR,SAASoE,IACL,OAAO,gCAAP,MACe,aADf,uCAEmB,iBAFnB,0GAG2D,mBAH3D,OAGuFxC,EAAMJ,SAAS6C,QAHtG,mBAGkCzC,EAAMF,cAC3BoC,IAAiBC,MAJ9B,sCAMmB,oBANnB,CAOaD,IAAiB9D,WAMlC,SAASsE,IACL,OAAO,yBAAC,gFAAR,MAEmB,sCAFnB,uCAGuB,2BAHvB,CAIiBtC,EAAM,sBAAwBA,EAAM,wBAA0B,KAElEuC,MANb,aAEqF,aAArBpC,EAAW7J,SAF3E,kEAQmB,sCARnB,CASakM,MATb,aAQqF,aAArBrC,EAAW7J,WAO/E,SAASmM,EAAaC,GAClBA,EAAUb,SAAQ,SAAAZ,GACVA,EAAQ0B,MACRvC,EAAO9J,MAAM6L,KAAKlB,GAElB7C,EAAS9H,MAAM6L,KAAKlB,MAI5B2B,IAGJ,SAASX,EAAWY,GAChB5C,EAAK,cAAe4C,GACpB1C,EAAW7J,MAAQuM,EAGvB,SAASC,EAAcC,EAA4BF,GAC/C,GAAIA,EACAZ,EAAWY,QAEX,GAAIE,IAAczC,EAAiBhK,MAAO,OAG9CgK,EAAiBhK,MAAQyM,EACzB9C,EAAK,iBAAkBa,EAAexK,OAElCiK,EAAeyC,IAAID,GAQnBpC,EAAcsC,IAAIF,GAAW,GAP7BG,GAAa,WACLrC,EAAOvK,OAEPuK,EAAOvK,MAAM6M,oBAQ7B,SAASA,IACLtC,EAAOvK,OAASuK,EAAOvK,MAAM6M,iBAGjC,SAASZ,IACL,IAAMxE,EAAQ,SAACkD,GAUJ,OATPmC,EAAanC,GACbX,EAAiBhK,MAAQ2K,EAAQC,GAC7BX,EAAeyC,IAAI/B,EAAQC,MAQ3BP,EAAcsC,IAAIhC,EAAQC,IAAI,GAC9B,UAAAL,EAAOvK,aAAP,SAAc6M,kBARdD,GAAa,WACLrC,EAAOvK,OAEPuK,EAAOvK,MAAM6M,qBAS7B,OAAO/B,EAAa9K,MAAMoI,KAAI,SAAAuC,GAC1B,OAAO,yBAAC,sEACcoC,EAAYpC,EAAQC,GAAIZ,EAAiBhK,OAD/D,SACgF,WAAOyH,EAAMkD,IAD7F,QACiHA,EADjH,2BAMR,SAASmC,EAAanC,GAClB,IAAM3E,EAAQgH,GAAgBrC,EAAQC,IACtC9C,EAAS9H,MAAMgG,GAAOwB,OAAS,EAInC,SAASoF,EAAaK,GAA8B,MAE1CtC,EAAUH,EAAexK,MAI/B,GAHKiK,EAAeyC,IAAI/B,EAAQC,KAC5BX,EAAe0C,IAAIhC,EAAQC,GAAI,KAE/BN,EAAWoC,IAAI/B,EAAQC,IAA3B,CAEA,IAAMsC,EAAMjD,EAAeyC,IAAI/B,EAAQC,IAA3B,UAAiCX,EAAerK,IAAI+K,EAAQC,WAA5D,aAAiC,EAAgCjI,OAAS,EAEtF0H,EAAcsC,IAAIhC,EAAQC,IAAI,GAE9BN,EAAWqC,IAAIhC,EAAQC,IAAI,GAE3BjB,EAAK,gBAAiBgB,EAAlB,6BAA2B,WAAO9C,EAAqBsF,GAA5B,kEAExBtF,EAASlF,OAGZyK,GAAWvF,EAAU8C,EAAQC,GAAI,WAEjCR,EAAoBuC,IAAIhC,EAAQC,GAAIuC,GAEpC9C,EAAcsC,IAAIhC,EAAQC,IAAI,GAC9BN,EAAW+C,OAAO1C,EAAQC,IAC1BqC,GAASA,IAAQE,GAXU,2CAA3B,wDAYDD,IAGP,IAAMH,EAAc,SAACnC,EAA4B0C,GAC7C,MAAO,CACHC,MAAOD,IAAW1C,EAAK,sBAAwB,KAIvD,SAASsB,IACL,IAAMzE,EAAQ,SAACsD,GACXhB,EAAW/J,MAAQ+K,GAGnByC,EAA0B,GACxBC,EAAc3F,EAAS9H,MAAMoI,KAAI,SAAAuC,GAAU,MACvCiB,EAAO,CACTjB,EAAQO,OAASsC,EAAjB,sCAAuC,cAAvC,CAAqD7C,EAAQO,OAAc,GADlE,+FAES6B,EAAYpC,EAAQC,GAAT,UAAab,EAAW/J,aAAxB,aAAa,EAAkB4K,IAFnD,SAEiEnD,EAFjE,QAEiFkD,EAFjF,iBAKb,OADA6C,EAAW7C,EAAQO,KACZU,KAEX,MAAO,CAAC,gCAAD,MACQ,+BADR,sCAEH9B,EAAO9J,MAAMoI,KAAI,SAAAiE,GACb,OAAO,+FAAkBU,EAAYV,EAAMzB,IAA3C,SAAyDnD,EAAzD,QAAyE4E,EAAzE,mBAHD,sCAKQ,+BALR,uCAMHoB,GAIR,SAASnB,IACLxE,EAAS9H,MAAMkL,MAAK,SAACwC,EAAGC,GACpB,OAAID,EAAErB,MACKqB,EAAExC,KAAK0C,cAAcD,EAAEzC,SAM1C,IAAM2C,EAAiBpD,uBAAS,WAC5B,QAAOL,EAAoBsC,IAAI1C,EAAiBhK,QAChDoK,EAAoBxK,IAAIoK,EAAiBhK,UAGvC8N,EAAiBrD,uBAAS,WAC5B,OAAIJ,EAAcqC,IAAI1C,EAAiBhK,QAC5BqK,EAAczK,IAAIoK,EAAiBhK,UAK5C+N,EAAoB,SAACC,GACvB,MAAqB,SAAjBA,EAAQ1K,KACD,OACiB,UAAjB0K,EAAQ1K,KACR,OAEJ0K,EAAQC,SAGbC,EAAa,SAACD,GAChBE,QAAQjI,IAAI+H,GACZ,IAAMD,EAAUI,GAAc,CAAEH,YAChCI,GAAcL,GACTxD,EAAexK,OACpBsO,EAAU9D,EAAexK,MAAOgO,GAAS,SAACrD,GACtC4D,EAAc,CACV3D,GAAID,EAAQC,GACZS,gBAAiB2C,EAAQhJ,KACzBiG,YAAa8C,EAAkBC,GAC/BQ,kBAAmBR,EAAQS,OAC3BjH,OAAQ,QAKpB,SAAS8G,EACL3D,EACAqD,EACAU,EACAC,GAEAhF,EAAK,OAAQgB,EAASqD,GAAS,SAACA,EAAkBrD,GAAuD,IAArC8D,EAAqC,uDAAb,UACxFC,EAAK/D,GACLiE,EAAcnP,OAAO4E,OAAO2J,EAAS,CAAES,cACxCE,GAGP,SAASC,EAAcZ,GACnB,GAAI/D,EAAeyC,IAAIsB,EAAQa,aAAc,OACnC7I,EAAK,UAAGiE,EAAerK,IAAIoO,EAAQa,oBAA9B,aAAG,EAAyCC,WAAU,SAAAC,GAAI,OAAIA,EAAKnE,KAAOoD,EAAQpD,MAC7F,IAAe,IAAX5E,EAAc,CACd,IAAMgJ,EAAc/E,EAAerK,IAAIoO,EAAQa,aAAc7I,GAC7DiE,EAAerK,IAAIoO,EAAQa,aAAc7I,GAAzC,SAAwDgJ,GAAgBhB,GAAxE,IAAiFa,YAAaG,EAAYH,gBAMtH,SAASN,EAAcxD,GACnB,IAAMH,EAAKG,EAAKH,UACTG,EAAKH,GACZ,IAAM5E,EAAQgH,GAAgBpC,GAC9B,IAAe,IAAX5E,EAAc,CACd,IAAQwB,EAAWuD,EAAXvD,OACJvD,EAASuD,KACmB,IAAxBA,EAAOyH,QAAQ,MAAsC,IAAxBzH,EAAOyH,QAAQ,OAC5ClE,EAAKvD,OAAS0H,SAAS1H,GAAUM,EAAS9H,MAAMgG,GAAOwB,SAM/DM,EAAS9H,MAAMgG,GAAf,OAA6B8B,EAAS9H,MAAMgG,IAAW+E,IAI/D,SAASiC,GAAgBpC,GACrB,OAAKA,EACE9C,EAAS9H,MAAM8O,WAAU,SAAAC,GAAI,OAAIA,EAAKnE,KAAOA,MADnC,EAMrB,SAASyD,GAAcL,GAEnB,GADAG,QAAQjI,IAAI8H,GACP/D,EAAeyC,IAAIsB,EAAQa,aAQzB,CACHzB,GAAWY,EAASA,EAAQa,YAAa,QACzC,IAOoD,EAP9CM,EAAoB,CACtBvE,GAAIoD,EAAQa,YACZxD,gBAAiB2C,EAAQhJ,KACzBiG,YAAa8C,EAAkBC,GAC/BQ,kBAAmBR,EAAQS,OAC3BjH,OAAQ,IAEZ,GAAIwG,EAAQa,cAAgB7E,EAAiBhK,MACzC,UAAAuK,EAAOvK,aAAP,SAAc6M,sBAEdsC,EAAkB3H,OAAS,KAE/B+G,EAAcY,QArBdZ,EAAc,CACV3D,GAAIoD,EAAQa,YACZrH,OAAQ,KACR6D,gBAAiB2C,EAAQhJ,KACzBiG,YAAa8C,EAAkBC,KAyB3C,SAASZ,GAAWY,EAA8BvB,EAA4BnJ,GAAwB,MAC7FU,EAAQgK,KAAUA,EAAU,CAAEA,IACnC/D,EAAe0C,IAAIF,EAAWxC,EAAerK,IAAI6M,IAAc,KAC/D,EAAAxC,EAAerK,IAAI6M,IAAYnJ,GAA/B,UAAwC0K,IAG5C,SAASI,GAAcJ,GACnB,OAAO,EAAP,KACO,CACCpD,GAAInF,IACJT,MAAM,IAAIE,MAAOkK,UACjB9L,KAAM,OACNmL,OAAQ,YACRI,YAAa7E,EAAiBhK,MAC9BqP,KAAM/F,EAAMJ,WAEb8E,GAIX,IAAMsB,GAAe,SAACX,GAClB,IACIY,EADEC,EAAa,CAAC,YAAa,aAAc,aAG3CD,EADAC,EAAWjH,SAASoG,EAAKrL,MACjB,CACJ2K,QAASwB,IAAIC,gBAAgBf,GAC7BrL,KAAM,SAGF,CACJA,KAAM,OACNqM,SAAUhB,EAAKxI,KACfyJ,SAAUjB,EAAKrP,KACf2O,QAAS,IAGjB,IAAMD,EAAUI,GAAcmB,GAC9BlB,GAAcL,GACTxD,EAAexK,OACpBsO,EAAU9D,EAAexK,MAAOgO,GAAS,SAACrD,MAEvCgE,IAGP,SAASkB,KACL,IAAMpI,EAAQ,WAAK,QACqB,EAAhC,UAACsC,EAAW/J,aAAZ,OAAC,EAAkBiL,aACnBsD,EAAc,CACV3D,GAAE,UAAEb,EAAW/J,aAAb,aAAE,EAAkB4K,GACtBK,YAAa,MAGrBuB,EAAa,UAACzC,EAAW/J,aAAZ,aAAC,EAAkB4K,GAAK,aAGnCkF,EAAa,WAC0C,QAAzD,MAAyB,aAArBjG,EAAW7J,OAAwB+J,EAAW/J,MAC1C0J,EAAM,kBACCA,EAAM,kBAAkB,CAAEiB,QAASZ,EAAW/J,QAElD,gCAAP,MACe,qBADf,uCAEmB,8BAFnB,yFAGiC+J,EAAW/J,aAH5C,aAGiC,EAAkB+L,QAHnD,4CAIuB,yBAJvB,WAIgDhC,EAAW/J,aAJ3D,aAIgD,EAAkB+P,aAJlE,sCAMmB,4BANnB,4CASmB,8BATnB,6EAU8B,UAV9B,QAUkDtI,GAVlD,0BAAO,CAAP,2CAc4B,aAArBoC,EAAW7J,OAAwBwK,EAAexK,MAClD,gCAAP,MACe,qBADf,uCAEmB,gCAFnB,uCAGoBwK,EAAexK,MAAM+P,WAHzC,oCAIqB,kBAJrB,8CAMmB,8BANnB,8EAOiCxF,EAPjC,OAOmDqC,EAPnD,YAOgFtD,EAAMH,YAPtF,KAO2Gc,EAAerK,IAAI4K,EAAexK,MAAM4K,IAPnJ,SAOkKiD,EAAe7N,MAPjL,QAOmM8N,EAAe9N,OAPlN,qFAQmCwK,EAAexK,MARlD,OAQmEkO,EARnE,SAQ2FoB,IAR3F,eADG,GAiBX,OAAO,gCAAP,MACe,gBADf,CAESQ,MAgBb,OAVAtH,EAAU,CACNT,WACAoE,eACAkC,iBACAO,gBACAL,gBACA1D,qBACAgC,mBAGG,WACH,OAAO,gCAAP,8CAC0DjD,GAD1D,CAIYN,EAAML,UAAY6C,IAErBE,IACA6D,WC9fRG,G,UAAStL,EAAYuL,ICH5BC,EAAc,CAChBnE,OAAQtI,EAAe,MACvB0C,KAAM3C,EAAe,KAGV6F,+BAAgB,CAC3BC,MAAO4G,EACP5Q,KAAM,cACN6Q,OAAQ,CAAC,UACT1G,MAJ2B,SAIrBH,GACF,IAAME,EAAmC2G,oBAAO,UAC1CnH,EAAQyB,uBAAS,kBAAMjB,EAASA,EAAOR,MAAQ,YACrD,OAAO,WACH,OAAO,gCAAP,wCAC2CA,EAAMhJ,OADjD,uBAC2EsJ,EAAMnD,KADjF,sBACmGmD,EAAMnD,KADzG,2BACgImD,EAAMnD,KADtI,SAEUmD,EAAMyC,OAASzC,EAAMyC,OAAOqE,QAAQ,GAAK9G,EAAMyC,a,UCfrEsE,EAAOzL,QAAU,SAACC,GACdA,EAAIC,UAAUuL,EAAO/Q,KAAM+Q,IAMhBA,QCRTC,EAAc,CAChBhN,KAAMG,EAAe,WACrB0C,KAAM1C,EAAe,YAGV4F,+BAAgB,CAC3B/J,KAAM,cACNgK,MAAOgH,EACP7G,MAH2B,SAGrBH,EAHqB,GAGL,IAAPI,EAAO,EAAPA,MACL6G,EAAMjH,EAAMhG,KAClB,OAAO,WACH,OAAO,mCAAP,wCAC8CiN,EAD9C,8BACuEjH,EAAMnD,OAD7E,CAEUuD,EAAMnG,QAAUmG,EAAMnG,UAAY,S,UCZxDiN,EAAO5L,QAAU,SAACC,GACdA,EAAIC,UAAU0L,EAAOlR,KAAMkR,IAMhBA,QCRTC,EAAe,CACjB9F,QAAS/G,IACT8M,UAAWhN,GAAgB,GAC3BiN,KAAMjN,GAAgB,IAIX2F,gCAAgB,CAC3B/J,KAAM,eACNgK,MAAOmH,EACPG,MAAO,CAAC,SACRnH,MAJ2B,SAIrBH,EAJqB,GAIN,IAANK,EAAM,EAANA,KAELkH,EAAU,WACZlH,EAAK,QAASL,EAAMqB,UAExB,OAAO,WACH,OAAO,gCAAP,MACe,eADf,QACwCkG,GADxC,CAESvH,EAAMqH,KAFf,6EAG6BrH,EAAMqH,UAAO1I,EAAYqB,EAAMqB,QAAQnD,QAHpE,0BAAO,CAAP,8EAIkC8B,EAAMqB,QAAQoB,QAJhD,UAOQzC,EAAMoH,UAAN,sCAEW,mBAFX,uCAGe,gBAHf,uCAImB,oBAJnB,CAIwCpH,EAAMqB,QAAQoF,WAJtD,kEAKmB,wBALnB,CAKuEzG,EAAMqB,QAAQU,iBAAmBtG,EAAUuE,EAAMqB,QAAQU,mBALhI,aAKmD/B,EAAMoH,eALzD,kEAOe,kBAPf,uCAQmB,yBARnB,iEASqB,mBATrB,mBASoF,UAApCpH,EAAMqB,QAAQ6D,qBAT9D,sCAUuB,mBAVvB,CAU2ClF,EAAMqB,QAAQM,gBAVzD,sCAYmB,eAZnB,qBAOyC3B,EAAMoH,eAP/C,sCAgBW,qBAhBX,CAgBiCpH,EAAMqB,QAAQoF,iBCvCtDe,I,UAAcpM,EAAYqM,KCDjCC,GAAa,CACfxJ,OAAQpE,EAAgB,IAGbiG,gCAAgB,CAC3B/J,KAAM,aACNgK,MAAO0H,GACPvH,MAH2B,SAGrBH,EAHqB,GAGL,IAAPI,EAAO,EAAPA,MACX,OAAO,WACH,OAAO,gCAAP,MACe,cADf,CAEUA,EAAMnG,SAAWmG,EAAMnG,UAFjC,kEAGmB,kBAHnB,CAIc+F,EAAM9B,OAAS,GAAK,MAAQ8B,EAAM9B,SAJhD,eAG+C8B,EAAM9B,gBCXpDyJ,I,UAAYvM,EAAYwM,KCA/BC,GAAc,CAChBrI,MAAOtF,EAAe,KACtB+D,MAAO9D,EAAe,eACtB2N,OAAQ1N,GAAgB,GACxB2N,OAAQ3N,GAAgB,GACxB4N,OAAQ7N,EAAe,MACvB8N,WAAY9N,EAAe,MAC3B+N,KAAM9N,GAAgB,GACtB+N,aAAc/N,GAAgB,GAC9BgO,KAAMhO,GAAgB,IAGX2F,gCAAgB,CAC3B/J,KAAM,cACNgK,MAAO6H,GACPP,MAAO,CAAC,cAAe,KAAM,UAC7BnH,MAJ2B,SAIrBH,EAJqB,GAIC,IAAbK,EAAa,EAAbA,KAAMD,EAAO,EAAPA,MACjB,EAA0ByG,oBAAY,UAA9BrH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAET4I,EAAa,WACfhI,EAAK,eAAe,GACpBA,EAAK,WAGHiI,EAAiB,WACdtI,EAAMmI,cACX9H,EAAK,eAAe,IAGlBkI,EAAK,SAACC,GACRnI,EAAK,KAAMmI,IAGf,OAAO,WACH,OAAO,4BAAC,gCAAR,MACqC,cADrC,sBACmEhJ,EADnE,qBACqFC,EADrF,+CAEmB,mBAFnB,QAEgD6I,GAFhD,4CAGmB,sBAHnB,MAGgD,CAAE9I,MAAO,GAAF,OAAKQ,EAAMR,MAAX,QAHvD,mEAIuB,sBAJvB,uCAK2B,6BAL3B,CAKyDQ,EAAM/B,QAL/D,oCAMyB,kBANzB,QAMqDoK,GANrD,qBAIqDrI,EAAM8H,UAJ3D,sCASuB,oBATvB,CAUkB1H,EAAMnG,QAAUmG,EAAMnG,UAAY,KAVpD,kEAauB,sBAbvB,6EAckC,OAdlC,QAcmDoO,GAdnD,0BAAO,CAc2DrI,EAAMiI,eAdxE,4EAekC,UAflC,KAeiD,OAfjD,MAe8D,qBAf9D,QAe6FM,GAf7F,0BAAO,CAe6FvI,EAAMgI,aAf1G,aAaqDhI,EAAM+H,cAb3D,aACkB/H,EAAMoI,YCpCvBK,I,UAAarN,EAAYsN,KCGhCC,GAAgB,CAClBlH,KAAMjH,IACN2I,UAAWrJ,EAAgB,IAC3B6J,MAAOvJ,GAAgB,GACvBwO,QAASxO,GAAgB,GACzByF,YAAazF,GAAgB,GAC7ByO,UAAW3O,EAAe,IAUf6F,gCAAgB,CAC3B/J,KAAM,gBACNgK,MAAO2I,GACPxI,MAH2B,SAGrBH,EAHqB,GAGN,IAANK,EAAM,EAANA,KACLzL,EAAOiK,mBACPe,EAAgBiH,oBAAO,YACvB+B,EAAU/J,kBAAI,GACdiK,EAAW,SAACC,GACd,IAAI/I,EAAM2D,MAAV,CAGAiF,EAAQlS,OAAQ,EAChB,IAAMsS,EAASD,EAAMC,OACI,IAArBA,EAAOC,YACPpE,QAAQjI,IAAI,WACZyD,EAAK,WAIb,SAASkD,IACL2F,uBAAS,WACDtU,EAAK8B,QACL9B,EAAK8B,MAAMuS,UAAYrU,EAAK8B,MAAMyS,iBAM9C,IAAMC,EAAajI,uBAAS,WACxB,OAAInB,EAAM2D,OACH3D,EAAM4I,WAGXS,EAAelI,uBAAS,kBAAwB,IAAlBnB,EAAM6I,UAAmB,MAM7D,OAJA3J,EAAU,CACNqE,mBAGG,WAEH,OAAO,gCAAP,IACe3O,EADf,MAC4B,eAD5B,SACsDkU,GADtD,iIAGqB,qBAHrB,mBAGiDM,EAAW1S,SAH5D,kEAIuB,2BAJvB,uDAI0DsJ,EAAM2D,WAIpD3D,EAAMyB,KAAK3C,KAAI,SAAC4F,EAAShI,GACrB,IAAM4F,EAAO,GACPgH,EAAOtJ,EAAMyB,KAAK/E,EAAQ,GAE5B4M,GACA5E,EAAQhJ,KAAO4N,EAAK5N,KAAO2N,EAAa3S,OAExC4L,EAAKC,KAAL,8EAGYmC,QAAS,CACLpD,GAAI,WACJtH,KAAM,QACN2K,QAAS1H,EAAWyH,EAAQhJ,QAN5C,OAaY,gBAAH,OAAmBgJ,EAAQ1K,MAAxC,IACIuP,EAAQ,CACR7E,UACA8E,QAAS5J,EAAS0B,KAAOoD,EAAQqB,KAAKzE,GACtCzB,YAAaG,EAAMH,aAiBvB,OAdAyC,EAAKC,KACgB,UAAjBmC,EAAQ1K,KAAR,6EACyBuP,EADzB,MAEmB,SAAjB7E,EAAQ1K,KAAR,4EACsBuP,EADtB,MAEiB,UAAjB7E,EAAQ1K,KAAR,8EACyB0K,QAAS,CAChCpD,GAAI,WACJtH,KAAM,QACN2K,QAAS1H,EAAWyH,EAAQhJ,QAJ9B,kFAMwB6N,EANxB,OASCjH,WC7GpBvC,gCAAgB,CAC3B/J,KAAM,qBACNmK,MAF2B,SAErBjF,EAFqB,GAET,IAAPqO,EAAO,EAAPA,MACDnJ,EAAQ,CACVuE,QAAS,SAAC3E,GAAD,2CAA+BA,EAAM2E,SAArC,QAGb,OAAO,WACH,OAAO,yBAAC,gFAAR,MAEc,sBAED4E,GADKnJ,OCXfL,gCAAgB,CAC3B/J,KAAM,oBACNmK,MAF2B,SAErBjF,EAFqB,GAET,IAAPqO,EAAO,EAAPA,MACP,OAAO,WACH,OAAO,yBAAC,gFAAR,MAEc,qBAYDA,GAXI,CACL5E,QAAS,SAAC3E,GAAD,MAAoB,CAAC,gCAAD,MACd,8BADc,uCAEV,4BAFU,qCAGR,2BAHQ,CAGoBA,EAAMsG,WAH1B,oCAIR,2BAJQ,CAIoBtG,EAAMqG,UAAY7J,EAAWwD,EAAMqG,cAJvD,oCAMZ,kBANY,gBCRtCtG,gCAAgB,CAC3B/J,KAAM,oBACNmK,MAF2B,SAErBjF,EAFqB,GAET,IAAPqO,EAAO,EAAPA,MAEP,OAAO,WACH,OAAO,yBAAC,uDAKKA,EAHI,CACL5E,QAAS,SAAC3E,GAAD,kDAAkCA,EAAM2E,SAAxC,aCP3B8E,GAAa,CACf/E,QAASpK,KAGEyF,gCAAgB,CAC3BC,MAAOyJ,GACPzT,KAAM,qBACNmK,MAH2B,SAGrBH,GACF,OAAO,WACH,OAAO,gCAAP,MACe,2CADf,wCAEoB,+BAFpB,CAGcA,EAAM0E,QAAQC,gBCZlC+E,GAAgB,CAClBhF,QAASpK,IACTkP,QAASpP,GAAgB,GACzByF,YAAazF,GAAgB,IAGlB2F,gCAAgB,CAC3B/J,KAAM,wBACNgK,MAAO0J,GACPpC,MAAO,CAAC,iBACRnH,MAJ2B,SAIrBH,EAJqB,GAIC,IAAbI,EAAa,EAAbA,MACLF,GADkB,EAANG,KACEwG,oBAAO,WAErB8C,EAAQ,SAACnB,EAAUxR,GACrBkJ,EAAO0J,MAAM,gBAAiBpB,EAAGxR,EAAKgJ,EAAM0E,QAASxE,IAGnD2J,EAAc,SAACrB,GACjBmB,EAAMnB,EAAG,WAGPsB,EAAqB,SAACtB,GACxBmB,EAAMnB,EAAG,YAGPuB,EAAoB,SAACvB,GACvBmB,EAAMnB,EAAG,WAGb,OAAO,WAAK,MACR,OAAO,gCAAP,kDACsDxI,EAAMwJ,QAAU,QAAU,QADhF,IACgGxJ,EAAM0E,QAAQpD,IAD9G,gFAE+ByI,EAF/B,OAE4D/J,EAAM0E,QAAQqB,KAAKtD,OAF/E,KAE+F,IAF/F,4CAGmB,qBAHnB,mEAIuB,yBAJvB,CAI8EzC,EAAM0E,QAAQqB,KAAKU,WAJjG,aAIwDzG,EAAMH,eAJ9D,sCAKuB,8BALvB,uCAM2B,6BAN3B,QAMkEiK,GANlE,WAOsB1J,EAAM,kBAP5B,aAOsB,OAAAA,EAAmBJ,EAAM0E,WAP/C,sCAS2B,uBAT3B,4CAU2B,gCAV3B,iEAW6B,qBAX7B,mBAWmF,cAAzB1E,EAAM0E,QAAQS,UAXxE,gEAY6B,kBAZ7B,QAYqG0E,GAZrG,mBAYiF,UAAzB7J,EAAM0E,QAAQS,sBCrCrE6E,I,UAAe5O,EAAY6O,KAC3BC,GAAmB9O,EAAY+O,IAC/BC,GAAkBhP,EAAYiP,IAC9BC,GAAkBlP,EAAYmP,IAC9BC,GAAmBpP,EAAYqP,IAC/BC,GAAsBtP,EAAYuP,ICVzCC,GAAU,SAACA,EAAiBhQ,GAC9BhD,SAASiT,YAAYD,GAAS,EAAOhQ,IAGnCkQ,GAAc,CAChBzJ,QAAS/G,KAGEyF,gCAAgB,CAC3B/J,KAAM,cACNgK,MAAO8K,GACPxD,MAAO,CAAC,OAAQ,UAChBnH,MAJ2B,SAIrBH,EAJqB,GAIN,IAANK,EAAM,EAANA,KACL0K,EAAWlM,mBAEXnI,EAAQmI,iBAAI,IACZmM,EAAY,SAACjC,GACI,UAAfA,EAAMkC,MAAqBlC,EAAMmC,SAAYnC,EAAMoC,WACnDpC,EAAMqC,iBACNR,GAAQ,oBAEO,UAAf7B,EAAMkC,MAGFlC,EAAMmC,SACNtG,KAOZ,SAASA,IAAU,MACfC,QAAQjI,IAAI,MACZyD,EAAK,OAAD,UAAS0K,EAASrU,aAAlB,aAAS,EAAgB8C,WAC7B6R,IAGJ,SAASA,IACLN,EAASrU,MAAO8C,UAAY,GAGhC,IAAM8R,EAAUzM,mBACV0M,EAAW1M,mBACX2M,EAAa,SAACzC,GAChB,IAAQ0C,EAAU1C,EAAMC,OAAhByC,MACHA,GAAUA,EAAMpS,SACrBkS,EAAS7U,MAAQ+U,EACjB5G,QAAQjI,IAAI6O,GACZrD,EAAK1R,OAAQ,IAGXgV,EAAa,WACXJ,EAAQ5U,QACR4U,EAAQ5U,MAAMA,MAAQ,KAIxBiV,EAAkB,WAAK,MACzB,UAAAL,EAAQ5U,aAAR,SAAeyH,SAGbiK,EAAOvJ,kBAAI,GAEX+M,EAAa,WACfxD,EAAK1R,OAAQ,GAGX6R,EAAK,WACFgD,EAAS7U,OAAU6U,EAAS7U,MAAM2C,SACvCoB,MAAMsL,KAAKwF,EAAS7U,OAAOuL,SAAQ,SAAAoD,GAC/BhF,EAAK,SAAUgF,MAEf3O,EAAMA,OACN2J,EAAK,OAAQ3J,EAAMA,OAGvB0R,EAAK1R,OAAQ,EACbgV,MAGEG,EAAS,WACXH,KAGJ,OAAO,WACH,OAAO,gCAAP,MACe,eADf,wEAE2C,KAAZtD,EAAK1R,MAFpC,mCAE+B0R,EAAK1R,MAFpC,SAE2D,IAF3D,QAEwE,EAFxE,KAEsF6R,EAFtF,SAEsGsD,GAFtG,0BAAO,CAAP,sCAGuB,qBAHvB,uCAI2B,4BAJ3B,8EAK2B,2BAL3B,+EAM0C7L,EAAMqB,QAAQoB,QANxD,4CAO+B,+BAP/B,CAO+DzC,EAAMqB,QAAQoF,aAP7E,sCAS2B,8BAT3B,uCAU+B,2BAV/B,CAY4B8E,EAAS7U,MAAQ+D,MAAMsL,KAAKwF,EAAS7U,OAAOoI,KAAI,SAAAuG,GAC5C,OAAO,gCAAP,MACe,2BADf,qCAEiB,mBAFjB,4CAGmB,4BAHnB,uCAIuB,wBAJvB,CAIgDA,EAAKrP,OAJrD,sCAKuB,wBALvB,CAKgDwG,EAAW6I,EAAKxI,eAI/D,KAtBjC,sCAyB+B,6BAzB/B,wGA0ByCnG,EAAMA,MA1B/C,SA0B6D,2BA1B7D,KA0B6F,OA1B7F,YA0BgH,SA1BhH,wBA0ByCA,EAAMA,mBA1B/C,uCA+BoB,OA/BpB,IA+BiC4U,EA/BjC,kBA+B0D,iBA/B1D,SA+BsFE,GA/BtF,4CAgCmB,oBAhCnB,uCAiCuB,yBAjCvB,QAiC0DI,GAjC1D,qCAkCyB,mBAlCzB,8CAoCuB,0BApCvB,qCAqCyB,iBArCzB,QAqCoDD,GArCpD,gDAwCmB,uBAxCnB,qCA0CsBZ,EA1CtB,MA2CsB,uBA3CtB,8BA6C2B,QA7C3B,UA8C4BC,GA9C5B,8CAiDmB,sBAjDnB,uCAkDuB,6BAlDvB,uCAmD2B,4BAnD3B,sIAoDuCpG,GApDvC,0BAAO,CAAP,iDCvFCkH,I,UAAa1Q,EAAY2Q,KCqBhCC,I,oBAAa,CAACtF,EAAQuF,EAAYzE,GAAa0E,EAAYlC,GAAc8B,GAAYnE,GAAWc,GAAYyB,GAAkBQ,GAAqBN,GACrJE,GAAiBE,KAEflP,GAAU,SAACC,GACbyQ,GAAWlN,KAAI,SAAAtD,GAAS,OAAID,EAAIC,UAAUA,EAAUxF,KAAMwF,OA+B/C,IACXF,YC1DW","file":"index.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"index\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import { PropType } from \"vue\"\n\nexport const numericProp = [Number, String]\n\nexport const makeNumericProp = <T>(defaultVal: T) => ({\n    type: numericProp,\n    default: defaultVal\n})\n\nexport const makeNumberProp = <T>(defaultVal: T) => ({\n    type: [Number],\n    default: defaultVal\n})\n\nexport const makeStringProp = <T>(defaultVal: T) => ({\n    type: [String],\n    default: defaultVal\n})\n\nexport const makeBooleanProp = <T>(defaultVal: T) => ({\n    type: [Boolean],\n    default: defaultVal\n})\n\nexport const makeObjectProp = <T = unknown>() => ({\n    type: Object as PropType<T>,\n    required: true as const\n})\n\nexport const makeArrayProp = <T = unknown>() => ({\n    type: Array as PropType<T[]>,\n    default: () => []\n})","export const isArray = Array.isArray\nexport const isString = (val: unknown) => typeof val === 'string'\nexport const isFunction = (val: unknown): val is Function => typeof val === 'function'\nexport const extend = Object.assign\nexport const camelize = (str: string): string =>\n  str.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n","import { App } from \"vue\";\nimport { camelize } from './validate'\n\n\n\ntype EventShim = {\n    new (...args: any[]): {\n        $props: {\n            onClick?: (...args: any[]) => void\n        }\n    }\n}\n\nexport type WithInstall<T> = T & {\n    install(app: App): void\n} & EventShim\n\nexport function withInstall<T>(options: T) {\n    (options as Record<string, unknown>).install = (app: App) => {\n        \n        const { name } = options as unknown as { name: string }\n        app.component(name, options)\n        app.component(camelize(`-${name}`), options)\n    }\n    \n    return options as WithInstall<T>\n}","export const formatDay = (time: number) => {\n    const date = new Date(time)\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    const day = date.getDate()\n    return year + '/' + month + '/' + day\n}\n\nexport const guid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport function formatByte(value: number) {\n    if (!value) {\n      return '0 Bytes'\n    }\n    const unitArr = ['B', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\n    let index = 0;\n    index = Math.floor(Math.log(value) / Math.log(1024))\n    let size = value / Math.pow(1024, index)\n    size = parseFloat(size.toFixed(2))\n    return size + unitArr[index]\n}\n\nexport function formatTime(value: number) {\n    const date = new Date(value)\n    const nDate = new Date()\n\n    const getFullYear = (t: Date) => t.getFullYear()\n    const getMD = (t: Date) => `${t.getMonth() + 1}-${t.getDay()}`\n\n    const dateYear = getFullYear(date)\n    const nDateYear = getFullYear(nDate)\n\n    let f\n    if (dateYear !== nDateYear) {\n        f = 'Y年M月D日 h:m'\n    } else if (`${dateYear}-${getMD(date)}` === `${nDateYear}-${getMD(nDate)}`) {\n        f = 'h:m'\n    } else {\n        f = 'M月D日 h:m'\n    }\n    return formatDate(value, f)\n}\n\nexport function formatDate(t: number | Date, f: string) {\n    if (!f) f = 'Y-M-D h:m:s'\n    if (t) {\n        t = new Date(t)\n    } else {\n        t = new Date()\n    }\n\n    const arr = [\n        t.getFullYear().toString(),\n        addZero(t.getMonth() + 1),\n        addZero(t.getDate()),\n        addZero(t.getHours()),\n        addZero(t.getMinutes()),\n        addZero(t.getSeconds())\n    ]\n    const fs = 'YMDhms'\n\n    for (let i = 0; i < arr.length; i++) {\n        f =  f.replace(fs.charAt(i), arr[i])\n    }\n    return f\n}\n\nexport function addZero(v: number) {\n    return v < 10 ? `0${v}` : v.toString()\n}\n","export const defaultMenus = [\n    {\n        key: 'messages',\n        title: '消息',\n        unread: 0,\n        click: null,\n        bottom: false,\n        render: () => <i class=\"free-icon-messages\"/>\n    },\n    {\n        key: 'contacts',\n        title: '联系人',\n        unread: 0,\n        click: null,\n        bottom: false,\n        render: () => <i class=\"free-icon-contacts\"/>,\n    },\n    {\n        key: 'settings',\n        title: '联系人',\n        unread: 0,\n        click: null,\n        bottom: true,\n        render: () => <i class=\"free-icon-menu\"/>,\n    }\n]\n\nexport const defaultContacts = [\n    {\n        id: 1,\n        nickname: '猪小明',\n        avatar: '猪小明',\n        sort: 'Z',\n        lastMessage: '今天几点下班？',\n        lastMessageTime: 1655114917359,\n        unread: 0\n    },\n    {\n        id: 2,\n        nickname: '茅台',\n        avatar: '茅台',\n        sort: 'M',\n        lastMessage: '晚一点',\n        lastMessageTime: 1655114917370,\n        unread: 0\n    },\n    {\n        id: 3,\n        nickname: '冷檬',\n        avatar: '冷檬',\n        sort: 'L',\n        lastMessage: '今晚一起看电影吗',\n        lastMessageTime: 1655114917370,\n        unread: 0\n    },\n    {\n        id: 3,\n        nickname: '米线',\n        avatar: '米线',\n        sort: 'M',\n        lastMessage: '文件已经发给你了',\n        lastMessageTime: 1655114917370,\n        unread: 2\n    },\n]","import { ref } from 'vue'\nimport { MenuType } from '../utils/types'\nimport { defaultMenus } from '../utils/constant'\n\nconst defaultMenusIndex: {\n    [key: string]: number\n} = {\n    messages: 0,\n    contacts: 1\n}\n\n\n\nfunction useMenus(customMenus: MenuType | undefined = undefined) {\n    let menus = ref<MenuType[]>([])\n    if (Array.isArray(customMenus)) {\n        menus.value = customMenus.map(menu => {\n            if (Object.keys(defaultMenusIndex).includes(menu.key)) {\n                return defaultMenus[defaultMenusIndex[menu.key]]\n            }\n            return menu\n        })\n    } else {\n        menus.value = defaultMenus\n    }\n\n    return menus\n}\n\nexport {\n    useMenus,\n    defaultMenus,\n}","import { extend } from \"../utils\"\nimport { getCurrentInstance } from \"vue\"\n\nexport function useExpose<T = Record<string, any>>(apis: T) {\n    const instance = getCurrentInstance()\n    if (instance) {\n        extend(instance.proxy, apis)\n    }\n}","import { defineComponent, ExtractPropTypes, reactive, ref, nextTick, computed } from \"vue\";\nimport { useMenus } from '../hooks'\nimport { isFunction, makeObjectProp, guid, isArray, makeBooleanProp, makeStringProp, isString } from '../utils'\nimport { MenuType } from \"../utils/types\";\nimport { useExpose } from \"../hooks/use-expose\";\nimport { Contact } from '../contact/types'\nimport {\n    Message,\n    User,\n    MessageInstance,\n    MessageStatus,\n    MessageType\n} from '../index'\n\nimport {\n    makeNumericProp\n} from '../utils'\nimport { UpdateMessage } from \"./types\";\n\nconst freeProps = {\n    width: makeNumericProp(860),\n    height: makeNumericProp(580),\n    shape: makeStringProp<'circle' | 'square'>('square'),\n    showMenu: makeBooleanProp(true),\n    userInfo: makeObjectProp<User>(),\n    messageName: makeBooleanProp(false),\n    menuAvatar: makeBooleanProp(true)\n}\n\nexport type FProps = ExtractPropTypes<typeof freeProps>\n\nexport default defineComponent({\n    name: 'free-im',\n    props: freeProps,\n    provide() {\n        return {\n            userInfo: this.userInfo,\n            freeIM: this\n        }\n    },\n    setup(props, { slots, emit }) {\n        const { width, height } = props\n        const wrapper_style = {\n            width: width + 'px',\n            height: height + 'px'\n        }\n        const activeMenu = ref('messages')\n        const contacts = ref<Contact[]>([])\n        const groups = ref<Contact[]>([])\n        const curContact = ref<Contact>()\n        const currentContactId = ref<string | number>()\n        const messagesBucket = reactive(new Map<string | number, Message[]>())\n        const messageLoadedBucket = reactive(new Map())\n        const loadingBucket = reactive(new Map())\n        const lockBucket = reactive(new Map())\n        const menus = useMenus()\n        const msgRef = ref<MessageInstance | null>(null)\n\n        const currentContact = computed(() => {\n            return contacts.value.find(contact => contact.id === currentContactId.value)\n        })\n\n        const getCurrentMessages = computed(() => {\n            if (!currentContactId.value) return []\n            return messagesBucket.get(currentContactId.value) || []\n        })\n\n        const lastMessages = computed(() => {\n            const data = contacts.value.filter(contact => contact.lastMessage)\n            data.sort((c1, c2) => {\n                return (c2.lastMessageTime ? c2.lastMessageTime : 0) - (c1.lastMessageTime ? c1.lastMessageTime : 0)\n            })\n            return data\n        })\n\n        const allUnread = computed(() => {\n            let unread =  0\n            lastMessages.value.forEach(contact => {\n                unread += contact.unread\n            })\n            return unread\n        })\n\n        function renderMenuItem() {\n            const top: HTMLElement | JSX.Element[] = []\n            const bottom: HTMLElement | JSX.Element[] = []\n            menus.value.forEach(menu => {\n                const node = <div class={`free-menu-item ${activeMenu.value === menu.key ? 'free-menu-active' : ''}`} title={menu.title} onClick={() => {\n                    isFunction(menu.click) ? menu.click : changeMenuClick(menu)\n                }}>\n                    {\n                        menu.key === 'messages' ?\n                        <free-badge unread={ allUnread.value }>\n                           { menu.render() }\n                        </free-badge> : menu.render() \n                    }\n                    \n                </div>\n                !menu.bottom ? top.push(node) : bottom.push(node)\n            })\n\n            function changeMenuClick(menu: MenuType) {\n                if (menu.bottom) return\n                changeMenu(menu.key)\n            }\n\n            return {\n                top,\n                bottom\n            }\n        }\n\n        function renderMenu() {\n            return (\n                <div class=\"free-menu\">\n                    <div class=\"free-menu-top\">\n                        <free-avatar v-show={ props.menuAvatar } class=\"free-menu-avatar\" avatar={ props.userInfo.avatar } />\n                        {renderMenuItem().top}\n                    </div>\n                    <div class=\"free-menu-bottom\">\n                        {renderMenuItem().bottom}\n                    </div>\n                </div>\n            )\n        }\n\n        function renderSidebar() {\n            return (\n                <>\n                    <div class=\"free-sidebar free-sidebar-messages\" v-show={activeMenu.value === 'messages'}>\n                        <div class=\"free-messages-fiexd_top\">\n                            {slots['messages-fixed-top'] ? slots['messages-fixed-top']() : ''}\n                        </div>\n                        {renderMessages()}\n                    </div>\n                    <div class=\"free-sidebar free-sidebar-messages\" v-show={activeMenu.value === 'contacts'}>\n                        {renderContacts()}\n                    </div>\n                </>\n            )\n        }\n\n        function initContacts(_contacts: Contact[]) {\n            _contacts.forEach(contact => {\n                if (contact.group) {\n                    groups.value.push(contact)\n                } else {\n                    contacts.value.push(contact)\n                }\n            })\n            \n            sortContacts()\n        }\n\n        function changeMenu(menuName: string) {\n            emit('change-menu', menuName)\n            activeMenu.value = menuName\n        }\n\n        function changeContact(contactId: string | number, menuName?: string) {\n            if (menuName) {\n                changeMenu(menuName)\n            } else {\n                if (contactId === currentContactId.value) return\n            }\n\n            currentContactId.value = contactId\n            emit('change-contact', currentContact.value)\n\n            if(!messagesBucket.has(contactId)) {\n                pullMessages(() => {\n                    if (msgRef.value){\n                        \n                        msgRef.value.scrollToBottom()\n                    }\n                })\n            } else {\n                loadingBucket.set(contactId, false)\n            }\n        }\n\n        function scrollToBottom() {\n            msgRef.value && msgRef.value.scrollToBottom()\n        }\n\n        function renderMessages() {\n            const click = (contact: Contact) => {\n                updateUnread(contact)\n                currentContactId.value = contact.id\n                if(!messagesBucket.has(contact.id)) {\n                    pullMessages(() => {\n                        if (msgRef.value){\n                            \n                            msgRef.value.scrollToBottom()\n                        }\n                    })\n                } else {\n                    loadingBucket.set(contact.id, false)\n                    msgRef.value?.scrollToBottom()\n                }\n            }\n\n            return lastMessages.value.map(contact => {\n                return (\n                    <free-contact {...activeClass(contact.id, currentContactId.value)} onClick={() => {click(contact)}} contact={contact} is-message />\n                )\n            })\n        }\n\n        function updateUnread(contact: Contact) {\n            const index = findContactById(contact.id)\n            contacts.value[index].unread = 0\n        }\n\n\n        function pullMessages(isEnd?: (end: boolean) => void) {\n            \n            const contact = currentContact.value!\n            if (!messagesBucket.has(contact.id))\n                messagesBucket.set(contact.id, [])\n\n            if (lockBucket.has(contact.id)) return\n\n            const len = messagesBucket.has(contact.id) ? messagesBucket.get(contact.id)?.length : 0\n            \n            loadingBucket.set(contact.id, true)\n            \n            lockBucket.set(contact.id, true)\n\n            emit('pull-messages', contact, async (messages: Message[], end?: boolean) => {\n                \n                if(messages.length === 0) {\n                    \n                }\n                addMessage(messages, contact.id, 'unshift')\n                // messagesBucket.get(contact.id)?.unshift(...messages)\n                messageLoadedBucket.set(contact.id, end)\n                \n                loadingBucket.set(contact.id, false)\n                lockBucket.delete(contact.id)\n                isEnd && isEnd(!!end)\n            }, len)\n        }\n\n        const activeClass = (id: number | string | null, curCid?: number | string | null) => {\n            return {\n                class: curCid === id ? 'free-contact-active' : ''\n            }\n        }\n\n        function renderContacts() {\n            const click = (data: Contact) => {\n                curContact.value = data\n            }\n\n            let curIndex: string | null = ''\n            const contactNode = contacts.value.map(contact => {\n                const node = [\n                    contact.sort !== curIndex ? <div class=\"free-index\">{contact.sort}</div> : '',\n                    <free-contact {...activeClass(contact.id, curContact.value?.id)} onClick={click} contact={contact} base />\n                ]\n                curIndex = contact.sort\n                return node\n            })\n            return [\n                <div class=\"free-contact-category-label\">群聊</div>,\n                groups.value.map(group => {\n                    return <free-contact {...activeClass(group.id)} onClick={click} contact={group} base />\n                }),\n                <div class=\"free-contact-category-label\">联系人</div>,\n                contactNode\n            ]\n        }\n\n        function sortContacts() {\n            contacts.value.sort((a, b) => {\n                if (a.group) {\n                    return a.sort.localeCompare(b.sort)\n                }\n                return a.sort.localeCompare(b.sort);\n            })\n        }\n\n        const currentLoadend = computed(() => {\n            return messageLoadedBucket.has(currentContactId.value) ? \n            messageLoadedBucket.get(currentContactId.value) : false\n        })\n\n        const currentLoading = computed(() => {\n            if (loadingBucket.has(currentContactId.value)) {\n                return loadingBucket.get(currentContactId.value)\n            }\n            return true\n        })\n\n        const lastMessageRender = (message: Message) => {\n            if (message.type === 'file') {\n                return '[文件]'\n            } else if (message.type === 'image') {\n                return '[图片]'\n            }\n            return message.content\n        }\n\n        const handleSend = (content: string) => {\n            console.log(content)\n            const message = createMessage({ content })\n            appendMessage(message)\n            if (!currentContact.value) return\n            _emitSend(currentContact.value, message, (contact) => {\n                updateContact({\n                    id: contact.id,\n                    lastMessageTime: message.time,\n                    lastMessage: lastMessageRender(message),\n                    lastMessageStatus: message.status,\n                    unread: 0\n                })\n            })\n        }\n\n        function _emitSend(\n            contact: Contact,\n            message: Message,\n            next: (contact: Contact) => void,\n            file?: File\n        ){\n            emit('send', contact, message, (message: Message, contact: Contact, status: MessageStatus = 'success') => {\n                next(contact)\n                updateMessage(Object.assign(message, { status }))\n            }, file)\n        }\n        \n        function updateMessage(message: UpdateMessage) {\n            if (messagesBucket.has(message.toContactId)) {\n                const index = messagesBucket.get(message.toContactId)?.findIndex(item => item.id === message.id)\n                if (index !== -1) {\n                    const findMessage = messagesBucket.get(message.toContactId)![index!]\n                    messagesBucket.get(message.toContactId)![index!] = { ...findMessage, ...message, toContactId: findMessage.toContactId }\n                }\n                \n            }\n        }\n\n        function updateContact(data: any) {\n            const id = data.id\n            delete data.id\n            const index = findContactById(id)\n            if (index !== -1) {\n                const { unread } = data\n                if (isString(unread)) {\n                    if (unread.indexOf('+') === 0 || unread.indexOf('-') === 0) {\n                        data.unread = parseInt(unread) + contacts.value[index].unread\n                    }\n                }\n                // if (data.unread) {\n                //     data.unread = data.unread + contacts.value[index].unread\n                // }\n                contacts.value[index] = { ...contacts.value[index], ...data }\n            }\n        }\n\n        function findContactById(id: string | number) {\n            if (!id) return -1\n            return contacts.value.findIndex(item => item.id === id)\n        }\n        /* \n\n        */\n        function appendMessage(message: Message, scrollToBottom = false) {\n            console.log(message)\n            if (!messagesBucket.has(message.toContactId)) {\n                updateContact({\n                    id: message.toContactId,\n                    unread: '+1',\n                    lastMessageTime: message.time,\n                    lastMessage: lastMessageRender(message)\n                })\n                \n            } else {\n                addMessage(message, message.toContactId, 'push')\n                const updateContactData = {\n                    id: message.toContactId,\n                    lastMessageTime: message.time,\n                    lastMessage: lastMessageRender(message),\n                    lastMessageStatus: message.status,\n                    unread: ''\n                }\n                if (message.toContactId === currentContactId.value) {\n                    msgRef.value?.scrollToBottom()\n                } else {\n                    updateContactData.unread = '+1'\n                }\n                updateContact(updateContactData)\n            }\n\n            // if (scrollToBottom) {\n            //     msgRef.value?.scrollToBottom()\n            // }\n        }\n\n        function addMessage(message: Message | Message[], contactId: string | number, type: 'unshift' | 'push') {\n            if (!isArray(message)) message = [ message ]\n            messagesBucket.set(contactId, messagesBucket.get(contactId) || [])\n            messagesBucket.get(contactId)![type](...message)\n        }\n\n        function createMessage(message: any): Message {\n            return {\n                ...{\n                    id: guid(),\n                    time: new Date().getTime(),\n                    type: 'text',\n                    status: 'uploading',\n                    toContactId: currentContactId.value!,\n                    from: props.userInfo\n                },\n                ...message\n            }\n        }\n\n        const handleUpload = (file: File) => {\n            const imageTypes = ['image/png', 'image/jpeg', 'image/gif']\n            let image\n            if (imageTypes.includes(file.type)) {\n                image = {\n                    content: URL.createObjectURL(file),\n                    type: 'image'\n                }\n            } else {\n                image = {\n                    type: 'file',\n                    fileSize: file.size,\n                    fileName: file.name,\n                    content: ''\n                }\n            }\n            const message = createMessage(image)\n            appendMessage(message)\n            if (!currentContact.value) return\n            _emitSend(currentContact.value, message, (contact) => {\n\n            }, file)\n        }\n\n        function renderContent() {\n            const click = () => {\n                if (!curContact.value?.lastMessage) {\n                    updateContact({\n                        id: curContact.value?.id,\n                        lastMessage: ' '\n                    })\n                }\n                changeContact(curContact.value?.id!, 'messages')\n            }\n\n            const detailNode = () => {\n                if (activeMenu.value === 'contacts' && curContact.value) {\n                    if (slots['contact-detail']) {\n                        return slots['contact-detail']({ contact: curContact.value })\n                    }\n                    return (\n                        <div class=\"free-contact-main\">\n                            <div class=\"free-contact-detail_header\">\n                                <free-avatar avatar={curContact.value?.avatar} />\n                                <div class=\"free-contact-nickname\">{curContact.value?.nickname}</div>\n                            </div>\n                            <div class=\"free-contact-detail_body\">\n\n                            </div>\n                            <div class=\"free-contact-detail_footer\">\n                                <free-button type=\"primary\" onClick={ click }>发送</free-button>\n                            </div>\n                        </div>\n                    )\n                } else if (activeMenu.value === 'messages' && currentContact.value) {\n                    return (\n                        <div class=\"free-contact-main\">\n                            <div class=\"free-contact-messages_header\">\n                                <span>{ currentContact.value.nickname }</span>\n                                <i class=\"free-icon-more\"></i>\n                            </div>\n                            <div class=\"free-contact-messages_body\">\n                                <free-messages ref={ msgRef } onLoad={ pullMessages } messageName={ props.messageName } data={ messagesBucket.get(currentContact.value.id) } is-end={ currentLoadend.value } loading={ currentLoading.value } />\n                                <free-editor contact={ currentContact.value } onSend={ handleSend } onUpload={ handleUpload }/>\n                            </div>\n                        </div>\n                    )\n                }\n                return undefined\n            }\n\n            return (\n                <div class=\"free-content\">\n                    {detailNode()}\n                </div>\n            )\n        }\n\n\n        useExpose({\n            useMenus,\n            initContacts,\n            appendMessage,\n            updateMessage,\n            updateContact,\n            getCurrentMessages,\n            scrollToBottom\n        })\n\n        return () => {\n            return (\n                <div class={`free-wrapper free-theme-default`} style={wrapper_style}>\n                    \n                    {\n                        props.showMenu && renderMenu()\n                    }\n                    {renderSidebar()}\n                    {renderContent()}\n                </div>\n            )\n        }\n    },\n})\n","import { withInstall } from '../utils'\nimport _FreeIM from './Free'\nimport './index.less'\n\n// FreeIM.install = (app: App) => {\n//     app.component(FreeIM.name, FreeIM)\n// }\nexport const FreeIM = withInstall(_FreeIM)\n\nexport default FreeIM\n\nexport type { FreeInstance, User } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        FreeIM: typeof FreeIM\n    }\n}\n","import { computed, defineComponent, inject } from \"vue\";\nimport { FreeInstance } from \"..\";\nimport { makeNumberProp, makeStringProp } from '../utils'\n\nconst avatarProps = {\n    avatar: makeStringProp('头像'),\n    size: makeNumberProp(40),\n}\n\nexport default defineComponent({\n    props: avatarProps,\n    name: 'free-avatar',\n    inject: ['freeIM'],\n    setup(props) {\n        const freeIM: FreeInstance | undefined = inject('freeIM')\n        const shape = computed(() => freeIM ? freeIM.shape : 'square')\n        return () => {\n            return (\n                <div class={`free-avatar free-avatar-${shape.value}`} style={`width: ${props.size}px;height: ${props.size}px;line-height: ${props.size}px;`}>\n                    { props.avatar ? props.avatar.substr(-2) : props.avatar }\n                </div>\n            )\n        }\n    }\n})\n","import { App } from 'vue'\nimport Avatar from './Avatar'\nimport './index.less'\n\nAvatar.install = (app: App) => {\n    app.component(Avatar.name, Avatar)\n}\n\nexport {\n    Avatar\n}\nexport default Avatar\n","import { defineComponent } from \"vue\";\nimport { makeStringProp } from '../utils'\n\nconst buttonProps = {\n    type: makeStringProp('default'),\n    size: makeStringProp('default')\n}\n\nexport default defineComponent({\n    name: 'free-button',\n    props: buttonProps,\n    setup(props, { slots }) {\n        const cls = props.type\n        return () => {\n            return (\n                <button class={`free-button free-button-${cls} free-button-size__${props.size}`}>\n                    { slots.default ? slots.default() : '' }\n                </button>\n            )\n        }\n    }\n})","import { App } from 'vue'\nimport Button from './Button'\nimport './index.less'\n\nButton.install = (app: App) => {\n    app.component(Button.name, Button)\n}\n\nexport {\n    Button\n}\nexport default Button\n","import { defineComponent } from \"vue\";\nimport { Contact } from \"./types\";\nimport { makeObjectProp, makeBooleanProp, formatDay } from '../utils'\nconst contactProps = {\n    contact: makeObjectProp<Contact>(),\n    isMessage: makeBooleanProp(false),\n    base: makeBooleanProp(false),\n\n}\n\nexport default defineComponent({\n    name: 'free-contact',\n    props: contactProps,\n    emits: ['click'],\n    setup(props, { emit }) {\n        \n        const onClick = () => {\n            emit('click', props.contact)\n        }\n        return () => {\n            return (\n                <div class=\"free-contact\" onClick={ onClick }>\n                    {props.base}\n                    <free-badge unread={ props.base ? undefined : props.contact.unread }>\n                        <free-avatar avatar={ props.contact.avatar } />\n                    </free-badge>\n                    {\n                    props.isMessage ?\n\n                    <div class=\"contact-content\">\n                        <div class=\"contact-info\">\n                            <div class=\"contact-nickname\">{ props.contact.nickname }</div>\n                            <div class=\"contact-lastmsg-time\" v-show={ props.isMessage }>{ props.contact.lastMessageTime && formatDay(props.contact.lastMessageTime) }</div>\n                        </div>\n                        <div class=\"contact-action\" v-show={ props.isMessage }>\n                            <div class=\"contact-content-inner\">\n                                <i class=\"free-icon-error\" v-show={ props.contact.lastMessageStatus === 'error' }></i>\n                                <div class=\"contact-lastmsg\">{ props.contact.lastMessage }</div>\n                            </div>\n                            <div class=\"contact-ban\"></div>\n                        </div>\n                    </div>\n                    :\n                    <div class=\"contact--nickname\">{ props.contact.nickname }</div>}\n                </div>\n            )\n        }\n    }\n})\n","import { withInstall } from '../utils'\nimport _Contact from './Contact'\nimport './index.less'\n\nexport const FreeContact = withInstall(_Contact)\n\nexport default FreeContact\nexport type { Contact } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        _Contact: typeof FreeContact\n    }\n}\n","import { defineComponent } from \"vue\";\nimport { makeNumericProp } from \"../utils\";\n\nconst badgeProps = {\n    unread: makeNumericProp(0)\n}\n\nexport default defineComponent({\n    name: 'free-badge',\n    props: badgeProps,\n    setup(props, { slots }) {\n        return () => {\n            return (\n                <div class=\"free-badge\">\n                    { slots.default && slots.default() }\n                    <div class=\"free-badge-dot\" v-show={ !!props.unread }>\n                        { props.unread > 99 ? '99+' : props.unread }\n                    </div>\n                </div>\n            )\n        }\n    }\n})\n","import { withInstall } from '../utils'\nimport _Badge from './Badge'\nimport './index.less'\n\nexport const FreeBadge = withInstall(_Badge)\n\nexport default FreeBadge\n\nexport type { Test } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        _Badge: typeof FreeBadge\n    }\n}","import { defineComponent, inject } from 'vue';\nimport { FreeInstance } from '../index'\nimport { makeBooleanProp, makeNumberProp, makeStringProp } from '../utils';\n\nconst DialogProps = {\n    width: makeNumberProp(300),\n    title: makeStringProp('Basic Modal'),\n    header: makeBooleanProp(true),\n    footer: makeBooleanProp(true),\n    okText: makeStringProp('确定'),\n    cancelText: makeStringProp('取消'),\n    mask: makeBooleanProp(true),\n    maskClosable: makeBooleanProp(true),\n    show: makeBooleanProp(false),\n}\n\nexport default defineComponent({\n    name: 'free-dialog',\n    props: DialogProps,\n    emits: ['update:show', 'ok', 'cancel'],\n    setup(props, { emit, slots }) {\n        const { width, height } = inject<any>('freeIM')\n        \n        const updateShow = () => {\n            emit('update:show', false)\n            emit('cancel')\n        }\n        \n        const maskUpdateShow = () => {\n            if (!props.maskClosable) return\n            emit('update:show', false)\n        }\n\n        const ok = (e: Event) => {\n            emit('ok', e)\n        }\n\n        return () => {\n            return (\n                <div v-show={ props.show } class=\"free-dialog\" style={`width:${width}px;height:${height}px;`}>\n                    <div class=\"free-dialog-mask\" onClick={ maskUpdateShow }></div>\n                    <div class=\"free-dialog-content\" style={{ width: `${props.width}px` }}>\n                        <div class=\"free-dialog-header\" v-show={ props.header }>\n                            <div class=\"free-dialog-header__title\">{ props.title }</div>\n                            <i class=\"free-icon-close\" onClick={ updateShow }></i>\n                        </div>\n\n                        <div class=\"free-dialog-body\">\n                            { slots.default ? slots.default() : '' }\n                        </div>\n\n                        <div class=\"free-dialog-footer\" v-show={ props.footer }>\n                            <free-button size=\"mini\" onClick={ updateShow }>{ props.cancelText }</free-button>\n                            <free-button type=\"primary\" size=\"mini\" style=\"margin-left: 10px;\" onClick={ ok }>{ props.okText }</free-button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n})","import { withInstall } from '../utils'\nimport _Dialog from './Dialog'\nimport './index.less'\nexport const FreeDialog = withInstall(_Dialog)\n\nexport default FreeDialog\n\nexport type { Test } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        Dialog: typeof FreeDialog\n    }\n}","\nimport { defineComponent, ref, nextTick, ExtractPropTypes, inject, computed } from \"vue\";\nimport { useExpose } from '../hooks/use-expose';\nimport { makeArrayProp, makeBooleanProp, makeNumberProp, makeNumericProp, formatTime } from '../utils'\nimport { Message } from \"./types\";\n\nconst messagesProps = {\n    data: makeArrayProp<Message>(),\n    contactId: makeNumericProp(''),\n    isEnd: makeBooleanProp(false),\n    loading: makeBooleanProp(true),\n    messageName: makeBooleanProp(false),\n    timeRange: makeNumberProp(1)\n}\n\nexport type MessageProps = ExtractPropTypes<typeof messagesProps>\n\n/* \n    1.首次进入\n    2.滚动条到顶部，有消息的情况下\n*/\n\nexport default defineComponent({\n    name: 'free-messages',\n    props: messagesProps,\n    setup(props, { emit }) {\n        const root = ref<HTMLElement>()\n        const userInfo: any = inject('userInfo')\n        const loading = ref(true)\n        const onScroll = (event: Event) => {\n            if (props.isEnd) {\n                return\n            }\n            loading.value = true\n            const target = event.target as HTMLInputElement\n            if (target.scrollTop === 0) {\n                console.log('触发加载...')\n                emit('load')\n            }\n        }\n\n        function scrollToBottom() {\n            nextTick(() => {\n                if (root.value) {\n                    root.value.scrollTop = root.value.scrollHeight\n                }\n            })\n        }\n\n\n        const loadStatus = computed(() => {\n            if (props.isEnd) return false\n            return props.loading\n        })\n\n        const intervalTime = computed(() => props.timeRange * 1000 * 60)\n\n        useExpose({\n            scrollToBottom\n        })\n        \n        return () => {\n            \n            return (\n                <div ref={ root } class=\"free-message\" onScroll={ onScroll }>\n                    <div class={`free-messages-loading`}>\n                        <i class=\"free-icon-loading\" v-show={loadStatus.value}></i>\n                        <div class=\"free-messages-load_text\" v-show={ props.isEnd }>暂无更多消息</div>\n                    </div>\n                    {\n                        \n                        props.data.map((message, index) => {\n                            const node = []\n                            const prev = props.data[index - 1]\n                            if (\n                                prev &&\n                                message.time - prev.time > intervalTime.value\n                            ) {\n                                node.push(\n                                    <free-message-event\n                                        {...{\n                                            message: {\n                                                id: '__time__',\n                                                type: 'event',\n                                                content: formatTime(message.time)\n                                            }\n                                        }}\n                                    />\n                                )\n                            }\n\n                            const tagName = `free-message-${message.type}`\n                            let attrs = {\n                                message,\n                                reverse: userInfo.id === message.from.id,\n                                messageName: props.messageName,\n                            }\n                            \n                            node.push(\n                                message.type === 'image' ?\n                                <free-message-image { ...attrs } />\n                                : message.type === 'file' ?\n                                <free-message-file { ...attrs } />\n                                : message.type === 'event' ? \n                                <free-message-event { ...{ message: {\n                                    id: '__time__',\n                                    type: 'event',\n                                    content: formatTime(message.time)\n                                } } } />\n                                : <free-message-text { ...attrs } />\n                            )\n\n                            return node\n                        })\n                    }\n                </div>\n            )\n        }\n    },\n})\n","import { defineComponent } from \"vue\";\nimport { Message } from \"./types\";\n\nexport default defineComponent({\n    name: 'free-message-image',\n    setup(_, { attrs }){\n        const slots = {\n            content: (props: Message) => <img src={ props.content } />\n        }\n        \n        return () => {\n            return (\n                <free-message-template\n                    class=\"free-message-image\"\n                    v-slots={ slots }\n                    { ...attrs }\n                />\n            )\n        }\n    }\n})\n","import { defineComponent } from \"vue\";\nimport { Message } from \"./types\";\nimport { formatByte } from '../utils'\nexport default defineComponent({\n    name: 'free-message-file',\n    setup(_, { attrs }){\n        return () => {\n            return (\n                <free-message-template\n                    class=\"free-message-file\"\n                    v-slots={{\n                        content: (props: Message) => [\n                            <div class=\"free-message-file__content\">\n                                <div class=\"free-message-file__inner\">\n                                    <p class=\"free-message-file__name\">{ props.fileName }</p>\n                                    <p class=\"free-message-file__size\">{ props.fileSize && formatByte(props.fileSize) }</p>\n                                </div>\n                                <i class=\"free-icon-file\"></i>\n                            </div>\n                        ]\n                    }}\n                    { ...attrs }\n                />\n            )\n        }\n    }\n})","import { defineComponent } from \"vue\";\nimport { Message } from \"./types\";\n\nexport default defineComponent({\n    name: 'free-message-text',\n    setup(_, { attrs }){\n        \n        return () => {\n            return (\n                <free-message-template\n                    v-slots={{\n                        content: (props: Message) => <span v-html={props.content} />\n                    }}\n                    { ...attrs }\n                />\n            )\n        }\n    }\n})","import { defineComponent } from \"vue\";\nimport { Message } from \"./types\";\nimport { makeObjectProp } from '../utils'\n\nconst eventProps = {\n    message: makeObjectProp<Message>()\n}\n\nexport default defineComponent({\n    props: eventProps,\n    name: 'free-message-event',\n    setup(props){\n        return () => {\n            return (\n                <div class=\"free-message-content free-message-event\">\n                    <span class=\"free-message-event__content\">\n                        { props.message.content }\n                    </span>\n                </div>\n            )\n        }\n    }\n})\n","import { defineComponent, inject } from \"vue\";\nimport { makeBooleanProp, makeObjectProp } from \"~/utils\";\nimport { Message } from \"./types\";\n\nconst templateProps = {\n    message: makeObjectProp<Message>(),\n    reverse: makeBooleanProp(false),\n    messageName: makeBooleanProp(false),\n}\n\nexport default defineComponent({\n    name: 'free-message-template',\n    props: templateProps,\n    emits: ['message-click'],\n    setup(props, { slots, emit }) {\n        const freeIM: any = inject('freeIM')\n\n        const _emit = (e: Event, key: string) => {\n            freeIM.$emit('message-click', e, key, props.message, freeIM)\n        }\n\n        const handleError = (e: Event) => {\n            _emit(e, 'status')\n        }\n\n        const handleClickContent = (e: Event) => {\n            _emit(e, 'content')\n        }\n\n        const handleClickAvatar = (e: Event) => {\n            _emit(e, 'avatar')\n        }\n\n        return () => {\n            return (\n                <div class={`free-message-content free-message-${ props.reverse ? 'right' : 'left'}`} key={ props.message.id }>\n                    <free-avatar onClick={ handleClickAvatar } avatar={ props.message.from.avatar } size={ 36 } />\n                    <div class=\"free-message-info\">\n                        <div class=\"free-message-username\" v-show={ props.messageName }>{ props.message.from.nickname }</div>\n                        <div class=\"free-message-content__wrap\">\n                            <div class=\"free-message-content__text\" onClick={ handleClickContent }>\n                                { slots['content']?.(props.message) }\n                            </div>\n                            <div style=\"padding-left: 10px;\"></div>\n                            <div class=\"free-message-content__status\">\n                                <i class=\"free-icon-loading\" v-show={ props.message.status === 'uploading' }></i>\n                                <i class=\"free-icon-error\" v-show={ props.message.status === 'error' } onClick={ handleError }></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n})\n","import { withInstall } from '../utils'\nimport _Messages from './Messages'\nimport _MessageImage from './Image'\nimport _MessageFile from './File'\nimport _MessageText from './Text'\nimport _MessageEvent from './Event'\nimport _MessageTemplate from './Template'\nimport './index.less'\n\nexport const FreeMessages = withInstall(_Messages)\nexport const FreeMessageImage = withInstall(_MessageImage)\nexport const FreeMessageFile = withInstall(_MessageFile)\nexport const FreeMessageText = withInstall(_MessageText)\nexport const FreeMessageEvent = withInstall(_MessageEvent)\nexport const FreeMessageTemplate = withInstall(_MessageTemplate)\n\nexport default FreeMessages\n\nexport type { MessageInstance, Message, MessageStatus,\n    MessageType } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        Messages: typeof FreeMessages\n    }\n}\n","import { defineComponent, ref } from \"vue\";\nimport { makeObjectProp, formatByte } from '../utils'\nimport { Contact } from '../index'\n\nconst command = (command: string, val?: any) => {\n    document.execCommand(command, false, val);\n}\n\nconst editorProps = {\n    contact: makeObjectProp<Contact>(),\n}\n\nexport default defineComponent({\n    name: 'free-editor',\n    props: editorProps,\n    emits: ['send', 'upload'],\n    setup(props, { emit }) {\n        const textarea = ref<HTMLElement>()\n        // 上传文件留言\n        const value = ref('')\n        const onKeydown = (event: KeyboardEvent) => {\n            if (event.code === 'Enter' && !event.ctrlKey && !event.shiftKey) {\n                event.preventDefault()\n                command(\"insertLineBreak\")\n            }\n            if (event.code === 'Enter') {\n                \n                \n                if (event.ctrlKey) {\n                    handleSend()\n                }\n                \n            }\n            \n        }\n\n        function handleSend() {\n            console.log('发送')\n            emit('send', textarea.value?.innerHTML)\n            clear()\n        }\n        \n        function clear() {\n            textarea.value!.innerHTML = ''\n        }\n\n        const fileRef = ref<HTMLInputElement>()\n        const fileList = ref<FileList | null>()\n        const changeFile = (event: Event) => {\n            const { files } = event.target as HTMLInputElement\n            if (!files || !files.length) return\n            fileList.value = files\n            console.log(files)\n            show.value = true\n        }\n\n        const resetInput = () => {\n            if (fileRef.value) {\n                fileRef.value.value = '';\n            }\n        }\n\n        const handleClickFile = () => {\n            fileRef.value?.click()\n        }\n\n        const show = ref(false)\n\n        const emojiClick = () => {\n            show.value = true\n        }\n\n        const ok = () => {\n            if (!fileList.value || !fileList.value.length) return\n            Array.from(fileList.value).forEach(file => {\n                emit('upload', file)\n            })\n            if (value.value) {\n                emit('send', value.value)\n            }\n            \n            show.value = false\n            resetInput()\n        }\n\n        const cancel = () => {\n            resetInput()\n        }\n\n        return () => {\n            return (\n                <div class=\"free-editor\">\n                    <free-dialog v-model={[show.value, 'show']} width={260} header={false} onOk={ ok } onCancel={ cancel }>\n                        <div class=\"free-editor-files\">\n                            <div class=\"free-editor-files__title\">发送给：</div>\n                            <div class=\"free-editor-files__info\">\n                                <free-avatar avatar={ props.contact.avatar }></free-avatar>\n                                <div class=\"free-editor-files__nickname\">{ props.contact.nickname }</div>\n                            </div>\n                            <div class=\"free-editor-files__content\">\n                                <div class=\"free-editor-files__list\">\n                                    {\n                                        fileList.value ? Array.from(fileList.value).map(file => {\n                                            return (\n                                                <div class=\"free-editor-files__item\">\n                                                    <i class=\"free-icon-files\"></i>\n                                                    <div class=\"free-editor-files__right\">\n                                                        <div class=\"free-editor-filename\">{ file.name }</div>\n                                                        <div class=\"free-editor-filesize\">{ formatByte(file.size) }</div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }) : []\n                                    }\n                                </div>\n                                <div class=\"free-editor-files__footer\">\n                                    <input v-model={ value.value } class=\"free-editor-files__input\" type=\"text\" placeholder=\"给朋友留言\" />\n                                </div>\n                            </div>\n                        </div>\n                    </free-dialog>\n                    <input type=\"file\" ref={ fileRef } multiple style=\"display: none;\" onChange={ changeFile } />\n                    <div class=\"free-editor-tool\">\n                        <div class=\"free-editor-tool__item\" onClick={ emojiClick }>\n                            <i class=\"free-icon-emoji\"></i>\n                        </div>\n                        <div class=\"free-editor-tool__item\">\n                            <i class=\"free-icon-file\" onClick={ handleClickFile }></i>\n                        </div>\n                    </div>\n                    <div class=\"free-editor-content\">\n                        <div\n                            ref={ textarea }\n                            class=\"free-editor-textarea\"\n                            contenteditable\n                            spellcheck=\"false\"\n                            onKeydown={ onKeydown }\n                        />\n                    </div>\n                    <div class=\"free-editor-footer\">\n                        <div class=\"free-editor-footer__inner\">\n                            <div class=\"free-editor-footer__text\">ctrl + enter 快捷发送消息</div>\n                            <free-button onClick={ handleSend }>发送</free-button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n})","import { withInstall } from '../utils'\nimport _Editor from './Editor'\nimport './index.less'\nexport const FreeEditor = withInstall(_Editor)\n\nexport default FreeEditor\n\nexport type { Test } from './types'\n\ndeclare module 'vue' {\n    export interface GlobalComponents {\n        FreeEditor: typeof FreeEditor\n    }\n}","import { App } from 'vue'\nimport { FreeIM, FreeInstance, User } from './free'\nimport FreeAvatar from './avatar'\nimport FreeButton from './button'\nimport { FreeContact, Contact } from './contact'\nimport { FreeBadge } from './badge'\nimport { FreeDialog } from './dialog'\n\nimport {\n    FreeMessages,\n    MessageInstance,\n    Message,\n    MessageStatus,\n    MessageType,\n    FreeMessageImage,\n    FreeMessageTemplate,\n    FreeMessageFile,\n    FreeMessageText,\n    FreeMessageEvent\n} from './messages'\n\nimport { FreeEditor } from './editor'\nimport './styles'\n\nconst components = [FreeIM, FreeAvatar, FreeContact, FreeButton, FreeMessages, FreeEditor, FreeBadge, FreeDialog, FreeMessageImage, FreeMessageTemplate, FreeMessageFile,\n    FreeMessageText, FreeMessageEvent]\n\nconst install = (app: App) => {\n    components.map(component => app.component(component.name, component))\n}\n\nexport type PullMessageNext = (message: Message[], end?: boolean) => void\nexport type SendNext = (message: Message, contact: Contact, status: MessageStatus) => void\n\nexport {\n    FreeIM,\n    FreeAvatar,\n    FreeButton,\n    FreeContact,\n    FreeMessages,\n    FreeEditor,\n    FreeDialog,\n    FreeMessageImage,\n    FreeMessageTemplate,\n    FreeMessageFile,\n    FreeMessageText,\n    FreeMessageEvent\n}\n\nexport type {\n    FreeInstance,\n    MessageInstance,\n    Contact,\n    Message,\n    User,\n    MessageStatus,\n    MessageType\n}\n\nexport default {\n    install\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}